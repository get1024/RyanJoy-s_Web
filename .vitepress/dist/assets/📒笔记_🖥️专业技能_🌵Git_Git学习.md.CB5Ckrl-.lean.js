import{_ as r,o,c as g,j as a,a as i,G as t,w as e,a3 as n,B as p}from"./chunks/framework.CY09FIEk.js";const F="/RyanJoy-s_Web/assets/orgin.of5w29N6.png",c="/RyanJoy-s_Web/assets/goal.CEmIJogG.png",b="/RyanJoy-s_Web/assets/process.Cd7vXxO2.mp4",y="/RyanJoy-s_Web/assets/origin2.CyhOACbe.png",u="/RyanJoy-s_Web/assets/goal2.CtQXmLQs.png",m="/RyanJoy-s_Web/assets/process2.DilOaPsw.mp4",J=JSON.parse('{"title":"Git学习","description":"","frontmatter":{"title":"Git学习","createAt":"2024-03-26T10:55:46.000Z","updateAt":"2025-01-19T20:50:29.000Z","tags":["git"]},"headers":[],"relativePath":"📒笔记/🖥️专业技能/🌵Git/Git学习.md","filePath":"📒笔记/🖥️专业技能/🌵Git/Git学习.md","lastUpdated":1737291242000}'),v={name:"📒笔记/🖥️专业技能/🌵Git/Git学习.md"},E={class:"tip custom-block"},C={tabindex:"0"},B={style:{"text-align":"center"}},f={style:{"text-align":"center"}},x={style:{"text-align":"center"}};function A(D,s,q,G,w,P){const h=p("ArticleMetadata"),l=p("VPNolebaseInlineLinkPreview"),k=p("NolebaseGitContributors"),d=p("NolebaseGitChangelog");return o(),g("div",{"data-pagefind-body":!0,"data-pagefind-meta":"base64:JTdCJTIydGl0bGUlMjIlM0ElMjJHaXQlRTUlQUQlQTYlRTQlQjklQTAlMjIlMkMlMjJjcmVhdGVBdCUyMiUzQSUyMjIwMjQtMDMtMjZUMTAlM0E1NSUzQTQ2LjAwMFolMjIlMkMlMjJ1cGRhdGVBdCUyMiUzQSUyMjIwMjUtMDEtMTlUMjAlM0E1MCUzQTI5LjAwMFolMjIlMkMlMjJ0YWdzJTIyJTNBJTVCJTIyZ2l0JTIyJTVEJTJDJTIyZGF0ZSUyMiUzQTE3MzcyOTEyNDIwMDAlN0Q="},[s[33]||(s[33]=a("h1",{id:"git-学习",tabindex:"-1"},[i("Git 学习 "),a("a",{class:"header-anchor",href:"#git-学习","aria-label":'Permalink to "Git 学习"'},"​")],-1)),t(h),a("div",E,[s[8]||(s[8]=a("p",{class:"custom-block-title"},"作者说",-1)),a("p",null,[s[2]||(s[2]=i("本文档是笔者基于对 ")),t(l,{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noreferrer"},{default:e(()=>s[0]||(s[0]=[i("Learn Git Branching")])),_:1}),s[3]||(s[3]=i(" 的自主学习整理的补充性文档。如果有幸此文被您发现，强烈推荐结合 ")),t(l,{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noreferrer"},{default:e(()=>s[1]||(s[1]=[i("Learn Git Branching")])),_:1}),s[4]||(s[4]=i(" 进行学习。"))]),s[9]||(s[9]=a("p",null,[i("由于本篇内容较多，翻看右边➡️「本页大纲」也无法做到十分清晰，因此这里提供对「二级标题」的快速索引。主体主要包括"),a("strong",null,"三大部分"),i("，如下表格所示，点击对应链接查看目标内容吧~")],-1)),a("table",C,[a("thead",null,[a("tr",null,[a("th",B,[t(l,{href:"#_1-git-基本内容"},{default:e(()=>s[5]||(s[5]=[i("1-Git 基本内容")])),_:1})]),a("th",f,[t(l,{href:"#_2-git-远程"},{default:e(()=>s[6]||(s[6]=[i("2-Git 远程")])),_:1})]),a("th",x,[t(l,{href:"#_3-实际搭配-github-使用"},{default:e(()=>s[7]||(s[7]=[i("3-实际搭配 Github 使用")])),_:1})])])])])]),s[34]||(s[34]=n(`<h2 id="_1-git-基本内容" tabindex="-1"><span style="color:red;font-family:monospace;font-style:italic;">1</span>-Git 基本内容 <a class="header-anchor" href="#_1-git-基本内容" aria-label="Permalink to &quot;&lt;span style=&quot;color:red;font-family:monospace;font-style:italic;&quot;&gt;1&lt;/span&gt;-Git 基本内容&quot;">​</a></h2><h3 id="提交" tabindex="-1">提交 <a class="header-anchor" href="#提交" aria-label="Permalink to &quot;提交&quot;">​</a></h3><p>Git 仓库中的提交记录保存的是项目的目录下<strong>所有文件的快照</strong>，就像是把整个目录复制，然后再粘贴一样，但比复制粘贴优雅许多。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交描述&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="分支" tabindex="-1">分支 <a class="header-anchor" href="#分支" aria-label="Permalink to &quot;分支&quot;">​</a></h3><p>Git 的分支非常轻量。它们只是简单地指向<strong>某个提交纪录</strong> —— 仅此而已。所以许多 Git 使用者传颂：<strong>早建分支！多用分支！</strong></p><h4 id="新建并切换分支" tabindex="-1">新建并切换分支 <a class="header-anchor" href="#新建并切换分支" aria-label="Permalink to &quot;新建并切换分支&quot;">​</a></h4><p></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 新建分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> switch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 切换分支</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="合并分支" tabindex="-1">合并分支 <a class="header-anchor" href="#合并分支" aria-label="Permalink to &quot;合并分支&quot;">​</a></h4><p></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 把指定分支合并到当前操作的分支上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 把当前操作的分支合并到指定分支上</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h3 id="在提交树上移动" tabindex="-1">在提交树上移动 <a class="header-anchor" href="#在提交树上移动" aria-label="Permalink to &quot;在提交树上移动&quot;">​</a></h3><h4 id="head" tabindex="-1">HEAD <a class="header-anchor" href="#head" aria-label="Permalink to &quot;HEAD&quot;">​</a></h4><p>HEAD 是一个对当前所在分支的符号引用 —— 也就是指向你正在其基础上进行工作的提交记录。<strong>HEAD 总是指向当前分支上最近一次提交记录</strong>。大多数修改提交树的 Git 命令都是从改变 HEAD 的指向开始的。HEAD 通常情况下是指向分支名的（如 bugFix）。在你提交时，改变了 bugFix 的状态，这一变化通过 HEAD 变得可见。</p><p>原本情况下， <code>HEAD =&gt; [branch] =&gt; 提交记录</code></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div>`,17)),a("p",null,[s[11]||(s[11]=i("就变为 ")),s[12]||(s[12]=a("code",null,"HEAD => 提交记录",-1)),s[13]||(s[13]=i(" 。但也不难察觉，这种方式要求我们能够明确指出 ")),s[14]||(s[14]=a("code",null,"<提交记录hash值>",-1)),s[15]||(s[15]=i(" ，这不是一个轻松的活。所以就有了 ")),t(l,{href:"#相对引用"},{default:e(()=>s[10]||(s[10]=[i("相对引用")])),_:1}),s[16]||(s[16]=i("。"))]),s[35]||(s[35]=n(`<h4 id="相对引用" tabindex="-1">相对引用 <a class="header-anchor" href="#相对引用" aria-label="Permalink to &quot;相对引用&quot;">​</a></h4><p>正如上文所说，通过哈希值指定提交记录来移动 HEAD 很不方便，所以 Git 引入了相对引用。这个就很厉害了!</p><p>使用相对引用的话，你就可以从一个易于记忆的地方（比如 <code>bugFix</code> 分支或 <code>HEAD</code> ）开始操作。</p><p>相对引用非常给力，这里我介绍两个简单的用法：</p><ul><li>使用 <code>^</code> 向上移动 1 个提交记录</li><li>使用 <code>~&lt;num&gt;</code> 向上移动多个提交记录，如 <code>~3</code></li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="强制移动分支" tabindex="-1">强制移动分支 <a class="header-anchor" href="#强制移动分支" aria-label="Permalink to &quot;强制移动分支&quot;">​</a></h4><p>相对引用最多的就是移动分支。可以直接使用 <code>-f</code> 选项让分支指向另一个提交。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">被移动分</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">支</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HEAD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>这一命令会将 <code>被移动分支</code> 强制指向 <code>HEAD or 分支名</code> 指向的提交记录的第 <code>num</code> 级 <code>parent</code> 提交。</p><h4 id="撤销变更" tabindex="-1">撤销变更 <a class="header-anchor" href="#撤销变更" aria-label="Permalink to &quot;撤销变更&quot;">​</a></h4><p></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD^</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用于本地回滚一个版本，对远程提交无效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用于远程回滚。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><p>我们比较常用 <code>git revert HEAD</code> ，这一命令通过新建一个「与父级提交状态相同的」提交，来<strong>覆盖</strong>本次提交。</p><h3 id="整理提交记录" tabindex="-1">整理提交记录 <a class="header-anchor" href="#整理提交记录" aria-label="Permalink to &quot;整理提交记录&quot;">​</a></h3><h4 id="git-cherry-pick" tabindex="-1">git cherry-pick <a class="header-anchor" href="#git-cherry-pick" aria-label="Permalink to &quot;git cherry-pick&quot;">​</a></h4><p>如果你想将一些提交复制到当前所在的位置（ <code>HEAD</code> ）下面的话， cherry-pick 是最直接的方式了。我个人非常喜欢 <code>cherry-pick</code> ，因为它特别简单。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">3&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h4 id="交互式-rebase" tabindex="-1">交互式 rebase <a class="header-anchor" href="#交互式-rebase" aria-label="Permalink to &quot;交互式 rebase&quot;">​</a></h4>`,19)),a("p",null,[s[18]||(s[18]=i("与引入 ")),t(l,{href:"/RyanJoy-s_Web/📒笔记/🖥️专业技能/🌵Git/Git学习.html#相对引用"},{default:e(()=>s[17]||(s[17]=[i("相对引用")])),_:1}),s[19]||(s[19]=i(" 的原因相同，我们有时候并不知道")),s[20]||(s[20]=a("strong",null,"提交记录 hash 值",-1)),s[21]||(s[21]=i("，这时我们就可以使用 交互式 rebase。"))]),s[36]||(s[36]=n('<p>交互式 rebase 指的是使用带参数 <code>--interactive</code> 的 rebase 命令, 简写为 <code>-i</code> 。</p><p>如果你在命令后增加了这个选项, Git 会打开一个 UI 界面并列出将要被复制到目标分支的备选提交记录，它还会显示每个提交记录的哈希值和提交说明，提交说明有助于你理解这个提交进行了哪些更改。</p><p>在实际使用时，所谓的 UI 窗口一般会在文本编辑器 —— 如 Vim —— 中打开一个文件。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>这一命令表明：将通过 UI 调整 <code>HEAD</code> 第 <code>&lt;num&gt;</code> 级 <code>parent</code> 提交记录 <strong>以下的</strong> 提交记录。</p><h3 id="提交的技巧" tabindex="-1">提交的技巧 <a class="header-anchor" href="#提交的技巧" aria-label="Permalink to &quot;提交的技巧&quot;">​</a></h3><h4 id="技巧-1" tabindex="-1">技巧 1 <a class="header-anchor" href="#技巧-1" aria-label="Permalink to &quot;技巧 1&quot;">​</a></h4><p>接下来这种情况也是很常见的：你之前在 <code>newImage</code> 分支上进行了一次提交，然后又基于它创建了 <code>caption</code> 分支，然后又提交了一次。</p><p>此时你想对某个以前的提交记录进行一些小小的调整。比如设计师想修改一下 <code>newImage</code> 中图片的分辨率，尽管那个提交记录并不是最新的了。</p><p>我们可以通过下面的方法来克服困难：</p>',10)),a("ul",null,[s[25]||(s[25]=a("li",null,[i("先用 "),a("code",null,"git rebase -i HEAD~<num>"),i(" 将提交重新排序，然后把我们"),a("strong",null,"想要修改的提交记录"),i("挪到最前")],-1)),s[26]||(s[26]=a("li",null,[i("然后用 "),a("code",null,"git commit --amend"),i(" 来进行一些小修改")],-1)),s[27]||(s[27]=a("li",null,[i("接着再用 "),a("code",null,"git rebase -i HEAD~<num>"),i(" 来将他们调回原来的顺序")],-1)),a("li",null,[s[23]||(s[23]=i("最后我们把 main 移到修改的最前端（详见 ")),t(l,{href:"/RyanJoy-s_Web/📒笔记/🖥️专业技能/🌵Git/Git学习.html#强制移动分支"},{default:e(()=>s[22]||(s[22]=[i("强制移动分支")])),_:1}),s[24]||(s[24]=i("），就大功告成啦！"))])]),s[37]||(s[37]=a("h4",{id:"技巧-2",tabindex:"-1"},[i("技巧 2 "),a("a",{class:"header-anchor",href:"#技巧-2","aria-label":'Permalink to "技巧 2"'},"​")],-1)),a("p",null,[s[30]||(s[30]=i("主要是通过 ")),t(l,{href:"#git cherry-pick"},{default:e(()=>s[28]||(s[28]=[i("git cherry-pick")])),_:1}),s[31]||(s[31]=i(" 和 ")),t(l,{href:"#强制移动分支"},{default:e(()=>s[29]||(s[29]=[i("强制移动分支")])),_:1}),s[32]||(s[32]=i(" 进行多次提交"))]),s[38]||(s[38]=n('<h3 id="git-tags" tabindex="-1">Git tags <a class="header-anchor" href="#git-tags" aria-label="Permalink to &quot;Git tags&quot;">​</a></h3><p><code>tag</code> 用来永远指向某个提交记录。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">标签</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">or</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">相对引</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">用</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="git-describe" tabindex="-1">Git describe <a class="header-anchor" href="#git-describe" aria-label="Permalink to &quot;Git describe&quot;">​</a></h3><p></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> describe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">re</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p><code>&lt;ref&gt;</code> 是任何能被 Git 识别成提交记录的引用，如果你没有指定的话，Git 会使用你目前所在的位置（ <code>HEAD</code> ）。</p><p>它输出的结果是这样的：</p><p><code>&lt;tag&gt;_&lt;numCommits&gt;_g&lt;hash&gt;</code></p><p><code>tag</code> 表示的是离 <code>ref</code> 最近的标签， <code>numCommits</code> 是表示这个 <code>ref</code> 与 <code>tag</code> 相差有多少个提交记录， <code>hash</code> 表示的是你所给定的 <code>ref</code> 所表示的提交记录哈希值的前几位。</p><p>当 <code>ref</code> 提交记录上有某个标签时，则只输出标签名称。</p><h2 id="_2-git-远程" tabindex="-1"><span style="color:red;font-family:monospace;font-style:italic;">2</span>-Git 远程 <a class="header-anchor" href="#_2-git-远程" aria-label="Permalink to &quot;&lt;span style=&quot;color:red;font-family:monospace;font-style:italic;&quot;&gt;2&lt;/span&gt;-Git 远程&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">远程仓库</p><p>即本地仓库的内容在远程的备份，实现了代码社交化。</p></div><h3 id="git-clone" tabindex="-1">git clone <a class="header-anchor" href="#git-clone" aria-label="Permalink to &quot;git clone&quot;">​</a></h3><p>用此命令，把「远程仓库」克隆到「本地仓库」，方便我们对仓库进行修改、PR……</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repo-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="git-fetch" tabindex="-1">git fetch <a class="header-anchor" href="#git-fetch" aria-label="Permalink to &quot;git fetch&quot;">​</a></h3><p><code>git fetch</code> 完成了仅有的但是很重要的两步:</p><ul><li>从远程仓库下载本地仓库中缺失的提交记录</li><li>更新远程分支指针(如 <code>o/main</code>)</li></ul><p><code>git fetch</code> 实际上将本地仓库中的「远程分支」更新成了「远程仓库相应分支」最新的状态，但并不会改变本地仓库的状态。它不会更新你的 <code>main</code> 分支，也不会修改你磁盘上的文件。</p><p>理解这一点很重要，因为许多开发人员误以为执行了 <code>git fetch</code> 以后，他们本地仓库就与远程仓库同步了。它可能已经将进行这一操作所需的所有数据都下载了下来，但是<strong>并没有</strong>修改你本地的文件。</p><h3 id="git-pull" tabindex="-1">git pull <a class="header-anchor" href="#git-pull" aria-label="Permalink to &quot;git pull&quot;">​</a></h3><p><code>git pull</code> 完成了「先抓取更新再合并到本地分支」这两个操作。</p><h3 id="git-push" tabindex="-1">git push <a class="header-anchor" href="#git-push" aria-label="Permalink to &quot;git push&quot;">​</a></h3><p><code>git push</code> 负责将<strong>你的</strong>变更上传到指定的远程仓库，并在远程仓库上合并你的新提交记录。</p><h3 id="偏离的提交历史" tabindex="-1">偏离的提交历史 <a class="header-anchor" href="#偏离的提交历史" aria-label="Permalink to &quot;偏离的提交历史&quot;">​</a></h3><p>假设你周一克隆了一个仓库，然后开始研发某个新功能。到周五时，你新功能开发测试完毕，可以发布了。但是你发现你的同事这周写了一堆代码，还改了许多你的功能中使用的 API，这些变动会导致你新开发的功能变得不可用。但是他们已经将那些提交推送到远程仓库了，因此你的工作就变成了基于项目<strong>旧版</strong>的代码，与远程仓库最新的代码不匹配了。</p><p>这种情况下, 因为这情况（历史偏离）有许多的不确定性，Git 是不会允许你 <code>push</code> 变更的。实际上 <code>git push</code> 会<strong>强制你先合并远程最新的代码</strong>，然后才能分享你的工作。</p><table tabindex="0"><thead><tr><th style="text-align:center;">初始状态</th><th style="text-align:center;">目标状态</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="'+F+'" alt="" loading="lazy"></td><td style="text-align:center;"><img src="'+c+`" alt="" loading="lazy"></td></tr></tbody></table><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fakeTeamwork</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> learngitbranching网站自定义命令，模拟团队协作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rebase</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><p>运行过程如下</p><p><video controls="true" preload="metadata"><source src="`+b+`"></video></p><h3 id="远程服务器拒绝" tabindex="-1">远程服务器拒绝 <a class="header-anchor" href="#远程服务器拒绝" aria-label="Permalink to &quot;远程服务器拒绝&quot;">​</a></h3><p>如果你是在一个大的合作团队中工作，很可能是 main 被锁定了，需要一些 Pull Request 流程来合并修改。如果你直接提交 (commit) 到本地 main，然后试图推送 (push) 修改, 你将会收到这样类似的信息：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="powershell">powershell</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [远程服务器拒绝] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (TF402455: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">不允许推送</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这个分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">你必须使</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">用pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request来更新这个分支.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><table tabindex="0"><thead><tr><th style="text-align:center;">初始状态</th><th style="text-align:center;">目标状态</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="`+y+'" alt="" loading="lazy"></td><td style="text-align:center;"><img src="'+u+`" alt="" loading="lazy"></td></tr></tbody></table><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> o/main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> switch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><p>运行过程如下</p><p><video controls="true" preload="metadata" aria-label="process2"><source src="`+m+`"></video></p><h2 id="_3-实际搭配-github-使用" tabindex="-1"><span style="color:red;font-family:monospace;font-style:italic;">3</span>-实际搭配 Github 使用 <a class="header-anchor" href="#_3-实际搭配-github-使用" aria-label="Permalink to &quot;&lt;span style=&quot;color:red;font-family:monospace;font-style:italic;&quot;&gt;3&lt;/span&gt;-实际搭配 Github 使用&quot;">​</a></h2><h3 id="首次提交" tabindex="-1">首次提交 <a class="header-anchor" href="#首次提交" aria-label="Permalink to &quot;首次提交&quot;">​</a></h3><p>欲把本地项目发布到 Github 仓库中，需要以下步骤：</p><p>1️⃣：首先需要新建一个 Repository；</p><p>2️⃣：在「本地仓库根目录」下打开 <code>Powershell</code> 或 <code>Command</code> ，<strong>依次执行</strong>以下命令：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="powershell">powershell</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 本地仓库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 初始化</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 添加所有变动到本次提交临时仓库中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;your commit state&gt;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 添加提交记录描述</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repo-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.git</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 链接远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 推动提交记录到远程仓库</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h3 id="版本更新" tabindex="-1">版本更新 <a class="header-anchor" href="#版本更新" aria-label="Permalink to &quot;版本更新&quot;">​</a></h3><p>非首次提交就无需像上述那样麻烦了，只需要进行「提交和同步」即可，具体操作如下：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="powershell">powershell</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可选。用于查看与上次提交记录的更改变化</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 添加所有变动到本次提交临时仓库中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;your commit state&gt;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 添加提交记录描述</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 拉取远程仓库最新提交记录，并与本地分支合并</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 推送提交记录到远程仓库</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><p>由于我们需要多次使用，每次输入上述命令十分繁琐，为了加快工作效率，我们可以自定义 <code>git</code> 命令。</p><h3 id="设置命令别名" tabindex="-1">设置命令别名 <a class="header-anchor" href="#设置命令别名" aria-label="Permalink to &quot;设置命令别名&quot;">​</a></h3><p>语法</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="powershell">powershell</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.[别名]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[原git命令]&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>具体使用</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="powershell">powershell</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.sb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;status -sb&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.cm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;commit -m&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.pl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pull origin main&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.pu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;push origin main&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><p>如果你有更多个性化需要，可以按照提供的语法格式，自行配置使用。</p><p>配置之后，使用效果如下：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="powershell">powershell</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[message]&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><p>不难发现，「提交和同步」变得十分简洁！</p>`,58)),t(k),t(d)])}const T=r(v,[["render",A]]);export{J as __pageData,T as default};
