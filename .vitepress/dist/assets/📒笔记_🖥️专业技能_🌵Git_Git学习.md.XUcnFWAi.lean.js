import{_ as r,o,c as g,j as a,a as i,G as t,w as l,a3 as h,B as n}from"./chunks/framework.CY09FIEk.js";const B=JSON.parse('{"title":"Git学习","description":"","frontmatter":{"title":"Git学习","createAt":"2024-03-26T10:55:46.000Z","updateAt":"2025-01-16T23:29:52.000Z","tags":["git"]},"headers":[],"relativePath":"📒笔记/🖥️专业技能/🌵Git/Git学习.md","filePath":"📒笔记/🖥️专业技能/🌵Git/Git学习.md","lastUpdated":1737125410000}'),c={name:"📒笔记/🖥️专业技能/🌵Git/Git学习.md"},F={class:"tip custom-block"};function b(y,s,u,v,E,m){const p=n("ArticleMetadata"),e=n("VPNolebaseInlineLinkPreview"),k=n("NolebaseGitContributors"),d=n("NolebaseGitChangelog");return o(),g("div",{"data-pagefind-body":!0,"data-pagefind-meta":"base64:JTdCJTIydGl0bGUlMjIlM0ElMjJHaXQlRTUlQUQlQTYlRTQlQjklQTAlMjIlMkMlMjJjcmVhdGVBdCUyMiUzQSUyMjIwMjQtMDMtMjZUMTAlM0E1NSUzQTQ2LjAwMFolMjIlMkMlMjJ1cGRhdGVBdCUyMiUzQSUyMjIwMjUtMDEtMTZUMjMlM0EyOSUzQTUyLjAwMFolMjIlMkMlMjJ0YWdzJTIyJTNBJTVCJTIyZ2l0JTIyJTVEJTJDJTIyZGF0ZSUyMiUzQTE3MzcxMjU0MTAwMDAlN0Q="},[s[22]||(s[22]=a("h1",{id:"git-学习",tabindex:"-1"},[i("Git 学习 "),a("a",{class:"header-anchor",href:"#git-学习","aria-label":'Permalink to "Git 学习"'},"​")],-1)),t(p),a("div",F,[s[5]||(s[5]=a("p",{class:"custom-block-title"},"作者说",-1)),a("p",null,[s[2]||(s[2]=i("本文档是笔者基于对 ")),t(e,{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noreferrer"},{default:l(()=>s[0]||(s[0]=[i("Learn Git Branching")])),_:1}),s[3]||(s[3]=i(" 的自主学习整理的补充性文档。如果有幸此文被您发现，强烈推荐结合 ")),t(e,{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noreferrer"},{default:l(()=>s[1]||(s[1]=[i("Learn Git Branching")])),_:1}),s[4]||(s[4]=i(" 进行学习。"))])]),s[23]||(s[23]=h(`<h2 id="git-主要" tabindex="-1">Git 主要 <a class="header-anchor" href="#git-主要" aria-label="Permalink to &quot;Git 主要&quot;">​</a></h2><h3 id="提交" tabindex="-1">提交 <a class="header-anchor" href="#提交" aria-label="Permalink to &quot;提交&quot;">​</a></h3><p>Git 仓库中的提交记录保存的是项目的目录下<strong>所有文件的快照</strong>，就像是把整个目录复制，然后再粘贴一样，但比复制粘贴优雅许多。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交描述&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="分支" tabindex="-1">分支 <a class="header-anchor" href="#分支" aria-label="Permalink to &quot;分支&quot;">​</a></h3><p>Git 的分支也非常轻量。它们只是简单地指向<strong>某个提交纪录</strong> —— 仅此而已。所以许多 Git 使用者传颂：<strong>早建分支！多用分支！</strong></p><h4 id="新建并切换分支" tabindex="-1">新建并切换分支 <a class="header-anchor" href="#新建并切换分支" aria-label="Permalink to &quot;新建并切换分支&quot;">​</a></h4><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 新建分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> switch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 切换分支</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="合并分支" tabindex="-1">合并分支 <a class="header-anchor" href="#合并分支" aria-label="Permalink to &quot;合并分支&quot;">​</a></h4><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 把指定分支合并到当前操作的分支上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 把当前操作的分支合并到指定分支上</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h3 id="在提交树上移动" tabindex="-1">在提交树上移动 <a class="header-anchor" href="#在提交树上移动" aria-label="Permalink to &quot;在提交树上移动&quot;">​</a></h3><h4 id="head" tabindex="-1">HEAD <a class="header-anchor" href="#head" aria-label="Permalink to &quot;HEAD&quot;">​</a></h4><p>HEAD 是一个对当前所在分支的符号引用 —— 也就是指向你正在其基础上进行工作的提交记录。<strong>HEAD 总是指向当前分支上最近一次提交记录</strong>。大多数修改提交树的 Git 命令都是从改变 HEAD 的指向开始的。HEAD 通常情况下是指向分支名的（如 bugFix）。在你提交时，改变了 bugFix 的状态，这一变化通过 HEAD 变得可见。</p><p>原本情况下， <code>HEAD =&gt; [branch] =&gt; 提交记录</code></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>就变为 <code>HEAD =&gt; 提交记录</code> 。但也不难察觉，这种方式要求我们能够明确指出 <code>&lt;提交记录hash值&gt;</code> ，这不是一个轻松的活。所以就有了 相对引用。</p><h4 id="相对引用" tabindex="-1">相对引用 <a class="header-anchor" href="#相对引用" aria-label="Permalink to &quot;相对引用&quot;">​</a></h4><p>正如上文所说，通过哈希值指定提交记录来移动 HEAD 很不方便，所以 Git 引入了相对引用。这个就很厉害了!</p><p>使用相对引用的话，你就可以从一个易于记忆的地方（比如 <code>bugFix</code> 分支或 <code>HEAD</code> ）开始操作。</p><p>相对引用非常给力，这里我介绍两个简单的用法：</p><ul><li>使用 <code>^</code> 向上移动 1 个提交记录</li><li>使用 <code>~&lt;num&gt;</code> 向上移动多个提交记录，如 <code>~3</code></li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="强制移动分支" tabindex="-1">强制移动分支 <a class="header-anchor" href="#强制移动分支" aria-label="Permalink to &quot;强制移动分支&quot;">​</a></h4><p>相对引用最多的就是移动分支。可以直接使用 <code>-f</code> 选项让分支指向另一个提交。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">被移动分</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">支</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HEAD/分支</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>这一命令会将 <code>被移动分支</code> 强制指向 <code>HEAD/分支名</code> 指向的提交记录的第 <code>num</code> 级 <code>parent</code> 提交。</p><h4 id="撤销变更" tabindex="-1">撤销变更 <a class="header-anchor" href="#撤销变更" aria-label="Permalink to &quot;撤销变更&quot;">​</a></h4><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD^</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用于本地回滚一个版本，对远程提交无效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用于远程回滚。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><p>我们比较常用 <code>git revert HEAD</code> ，这一命令通过新建一个 与父级提交状态相同的 提交，来覆盖本次提交。</p><h3 id="整理提交记录" tabindex="-1">整理提交记录 <a class="header-anchor" href="#整理提交记录" aria-label="Permalink to &quot;整理提交记录&quot;">​</a></h3><h4 id="git-cherry-pick" tabindex="-1">git cherry-pick <a class="header-anchor" href="#git-cherry-pick" aria-label="Permalink to &quot;git cherry-pick&quot;">​</a></h4><p>如果你想将一些提交复制到当前所在的位置（ <code>HEAD</code> ）下面的话， cherry-pick 是最直接的方式了。我个人非常喜欢 <code>cherry-pick</code> ，因为它特别简单。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">3&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h4 id="交互式-rebase" tabindex="-1">交互式 rebase <a class="header-anchor" href="#交互式-rebase" aria-label="Permalink to &quot;交互式 rebase&quot;">​</a></h4>`,34)),a("p",null,[s[7]||(s[7]=i("与引入 ")),t(e,{href:"/RyanJoy-s_Web/📒笔记/🖥️专业技能/🌵Git/Git学习.html#相对引用"},{default:l(()=>s[6]||(s[6]=[i("相对引用")])),_:1}),s[8]||(s[8]=i(" 的原因相同，我们有时候并不知道")),s[9]||(s[9]=a("strong",null,"提交记录 hash 值",-1)),s[10]||(s[10]=i("，这时我们就可以使用 交互式 rebase。"))]),s[24]||(s[24]=h('<p>交互式 rebase 指的是使用带参数 <code>--interactive</code> 的 rebase 命令, 简写为 <code>-i</code> 。</p><p>如果你在命令后增加了这个选项, Git 会打开一个 UI 界面并列出将要被复制到目标分支的备选提交记录，它还会显示每个提交记录的哈希值和提交说明，提交说明有助于你理解这个提交进行了哪些更改。</p><p>在实际使用时，所谓的 UI 窗口一般会在文本编辑器 —— 如 Vim —— 中打开一个文件。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>这一命令表明：将通过 UI 调整 <code>HEAD</code> 第 <code>&lt;num&gt;</code> 级 <code>parent</code> 提交记录 <strong>(不包含自身)</strong> 以下的提交记录。</p><h3 id="提交的技巧" tabindex="-1">提交的技巧 <a class="header-anchor" href="#提交的技巧" aria-label="Permalink to &quot;提交的技巧&quot;">​</a></h3><h4 id="技巧-1" tabindex="-1">技巧 1 <a class="header-anchor" href="#技巧-1" aria-label="Permalink to &quot;技巧 1&quot;">​</a></h4><p>接下来这种情况也是很常见的：你之前在 <code>newImage</code> 分支上进行了一次提交，然后又基于它创建了 <code>caption</code> 分支，然后又提交了一次。</p><p>此时你想对某个以前的提交记录进行一些小小的调整。比如设计师想修改一下 <code>newImage</code> 中图片的分辨率，尽管那个提交记录并不是最新的了。</p><p>我们可以通过下面的方法来克服困难：</p>',10)),a("ul",null,[s[14]||(s[14]=a("li",null,[i("先用 "),a("code",null,"git rebase -i HEAD~<num>"),i(" 将提交重新排序，然后把我们"),a("strong",null,"想要修改的提交记录"),i("挪到最前")],-1)),s[15]||(s[15]=a("li",null,[i("然后用 "),a("code",null,"git commit --amend"),i(" 来进行一些小修改")],-1)),s[16]||(s[16]=a("li",null,[i("接着再用 "),a("code",null,"git rebase -i HEAD~<num>"),i(" 来将他们调回原来的顺序")],-1)),a("li",null,[s[12]||(s[12]=i("最后我们把 main 移到修改的最前端（详见 ")),t(e,{href:"/RyanJoy-s_Web/📒笔记/🖥️专业技能/🌵Git/Git学习.html#强制移动分支"},{default:l(()=>s[11]||(s[11]=[i("强制移动分支")])),_:1}),s[13]||(s[13]=i("），就大功告成啦！"))])]),s[25]||(s[25]=a("h4",{id:"技巧-2",tabindex:"-1"},[i("技巧 2 "),a("a",{class:"header-anchor",href:"#技巧-2","aria-label":'Permalink to "技巧 2"'},"​")],-1)),a("p",null,[s[19]||(s[19]=i("主要是通过 ")),t(e,{href:"#git cherry-pick"},{default:l(()=>s[17]||(s[17]=[i("git cherry-pick")])),_:1}),s[20]||(s[20]=i(" 和 ")),t(e,{href:"#强制移动分支"},{default:l(()=>s[18]||(s[18]=[i("强制移动分支")])),_:1}),s[21]||(s[21]=i(" 进行多次提交"))]),s[26]||(s[26]=h(`<h3 id="git-tags" tabindex="-1">Git tags <a class="header-anchor" href="#git-tags" aria-label="Permalink to &quot;Git tags&quot;">​</a></h3><p><code>tag</code> 用来永远指向某个提交记录。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">标签</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">提交记录hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">值</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">or</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">相对引</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">用</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="git-describe" tabindex="-1">Git describe <a class="header-anchor" href="#git-describe" aria-label="Permalink to &quot;Git describe&quot;">​</a></h3><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> describe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">re</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p><code>&lt;ref&gt;</code> 是任何能被 Git 识别成提交记录的引用，如果你没有指定的话，Git 会使用你目前所在的位置（ <code>HEAD</code> ）。</p><p>它输出的结果是这样的：</p><p><code>&lt;tag&gt;_&lt;numCommits&gt;_g&lt;hash&gt;</code></p><p><code>tag</code> 表示的是离 <code>ref</code> 最近的标签， <code>numCommits</code> 是表示这个 <code>ref</code> 与 <code>tag</code> 相差有多少个提交记录， <code>hash</code> 表示的是你所给定的 <code>ref</code> 所表示的提交记录哈希值的前几位。</p><p>当 <code>ref</code> 提交记录上有某个标签时，则只输出标签名称。</p><h2 id="git-远程" tabindex="-1">Git 远程 <a class="header-anchor" href="#git-远程" aria-label="Permalink to &quot;Git 远程&quot;">​</a></h2><h2 id="git-命令自定义别名" tabindex="-1">Git 命令自定义别名 <a class="header-anchor" href="#git-命令自定义别名" aria-label="Permalink to &quot;Git 命令自定义别名&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">设置别名命令</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.[别名]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[原git命令]&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">个人命令别名设置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[message]&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[message]&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,13)),t(k),t(d)])}const A=r(c,[["render",b]]);export{B as __pageData,A as default};
