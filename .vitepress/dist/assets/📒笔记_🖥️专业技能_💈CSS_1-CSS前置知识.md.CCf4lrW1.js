import{_ as h,o as d,c as o,j as l,a as r,G as i,a3 as e,B as a}from"./chunks/framework.BulN5com.js";const c="/assets/CSS_Info.J2LhQ5l1.png",k="/assets/CSS_structure.j5j9vXT9.png",S=JSON.parse('{"title":"CSS 前置知识","description":"","frontmatter":{"title":"CSS 前置知识","createAt":"2024-05-05T22:25:24.000Z","updateAt":"2025-01-25T20:42:40.000Z","tags":["前端"]},"headers":[],"relativePath":"📒笔记/🖥️专业技能/💈CSS/1-CSS前置知识.md","filePath":"📒笔记/🖥️专业技能/💈CSS/1-CSS前置知识.md","lastUpdated":1737820427000}'),g={name:"📒笔记/🖥️专业技能/💈CSS/1-CSS前置知识.md"};function u(E,s,b,m,y,v){const t=a("ArticleMetadata"),n=a("NolebaseGitContributors"),p=a("NolebaseGitChangelog");return d(),o("div",{"data-pagefind-body":!0,"data-pagefind-meta":"base64:JTdCJTIydGl0bGUlMjIlM0ElMjJDU1MlMjAlRTUlODklOEQlRTclQkQlQUUlRTclOUYlQTUlRTglQUYlODYlMjIlMkMlMjJjcmVhdGVBdCUyMiUzQSUyMjIwMjQtMDUtMDVUMjIlM0EyNSUzQTI0LjAwMFolMjIlMkMlMjJ1cGRhdGVBdCUyMiUzQSUyMjIwMjUtMDEtMjVUMjAlM0E0MiUzQTQwLjAwMFolMjIlMkMlMjJ0YWdzJTIyJTNBJTVCJTIyJUU1JTg5JThEJUU3JUFCJUFGJTIyJTVEJTJDJTIyZGF0ZSUyMiUzQTE3Mzc4MjA0MjcwMDAlN0Q="},[s[0]||(s[0]=l("h1",{id:"css-前置知识",tabindex:"-1"},[r("CSS 前置知识 "),l("a",{class:"header-anchor",href:"#css-前置知识","aria-label":'Permalink to "CSS 前置知识"'},"​")],-1)),i(t),s[1]||(s[1]=e('<div class="tip custom-block"><p class="custom-block-title">作者说</p><p>由于受 Vitepress 和 Markdown 的限制，为了更好的学习体验，笔者提供了本笔记的 PDF 版本：</p><ul><li><a href="/blog/tech_skills/CSS2%E7%AC%94%E8%AE%B0.pdf">点击查看/下载<strong>CSS2</strong>完整笔记</a></li><li><a href="/blog/tech_skills/CSS3%E7%AC%94%E8%AE%B0.pdf">点击查看/下载<strong>CSS3</strong>完整笔记</a></li></ul></div><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><ul><li><code>CSS</code> 全称为<strong>层叠样式表</strong>（<code>Cascading Style Sheets</code>）； <ul><li>层叠：一层一层“铺”上去；</li><li>样式：文字大小、颜色、背景……；</li><li>表：列表。</li><li>如图所示： <img src="'+c+`" alt="" loading="lazy"></li></ul></li><li><code>CSS</code> 也是一种标记语言，用于给 <code>HTML</code> 设置样式。</li><li><code>HTML</code> 搭建结构，<code>CSS</code> 添加样式，实现了<strong>结构样式的分离</strong>。</li></ul><h2 id="三种样式表" tabindex="-1">三种样式表 <a class="header-anchor" href="#三种样式表" aria-label="Permalink to &quot;三种样式表&quot;">​</a></h2><h3 id="行内样式" tabindex="-1">行内样式 <a class="header-anchor" href="#行内样式" aria-label="Permalink to &quot;行内样式&quot;">​</a></h3><ul><li>写在空间标签的 <code>style</code> 属性中，又称内联样式。</li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.html">example.html</span></div><div class="language-HTML vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color:red;font-style:italic;&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是一个内联样式举例&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><ul><li>效果前后对比 <ul><li>前 <code>&lt;h1&gt;这是一个内联样式举例&lt;/h1&gt;</code><h1>这是一个内联样式举例</h1></li><li>后 <code>&lt;h1 style=&quot;color:red;font-style:italic;&quot;&gt;这是一个内联样式举例&lt;/h1&gt;</code><h1 style="color:red;font-style:italic;">这是一个内联样式举例</h1></li></ul></li></ul><p><span class="marker-highlight">注意点</span></p><ul><li><strong><code>HTML</code> 的名值对是“名=值”；<code>CSS</code> 的名值对是“名: 值;”；</strong></li><li>行内样式表，<strong>只能控制当前标签</strong>的样式，对其他标签无效。</li><li>优先级高，会覆盖在 <code>css</code> 文件中对同元素定义的样式。</li></ul><p><span class="marker-highlight">存在的问题</span></p><ul><li>不能复用；</li><li><strong>没有体现结构与样式分离</strong>；</li><li>可维护性差；</li></ul><h3 id="内部样式" tabindex="-1">内部样式 <a class="header-anchor" href="#内部样式" aria-label="Permalink to &quot;内部样式&quot;">​</a></h3><ul><li>写在 <code>HTML</code> 页面内部，将所有的 <code>CSS</code> 代码汇总，单独放在 <code>&lt;style&gt;</code> 标签内部；</li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.html">example.html</span></div><div class="language-HTML vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><p><span class="marker-highlight">注意点</span></p><ul><li><code>&lt;style&gt;</code> 标签理论上可以放在 <code>HTML</code> 文件的任意位置，但是<strong>推荐放在 <code>&lt;head&gt;</code> 标签内部</strong>；</li></ul><p><span class="marker-highlight">存在的问题</span></p><ul><li><strong>没有完全实现样式与结构分离</strong>；</li><li>同一个 <code>HTML</code> 文件内可以对样式进行复用，但是多个 <code>HTML</code> 文件无法复用样式。</li></ul><p><span class="marker-highlight">优势</span></p><ul><li>可以复用；</li><li>代码结构清晰。</li></ul><h3 id="外部样式" tabindex="-1">外部样式 <a class="header-anchor" href="#外部样式" aria-label="Permalink to &quot;外部样式&quot;">​</a></h3><ul><li>写在单独的 <code>.css</code> 文件中，随后在 <code>HTML</code> 文件中引入使用；</li><li>首先新建一个 <code>[css文件名称].css</code> 文件，并写入以下内容：</li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.css">example.css</span></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><ul><li>再在 <code>HTML</code> 文件中引入该样式文件：</li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.html">example.html</span></div><div class="language-HTML vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~/example.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p><span class="marker-highlight">注意点</span></p><ul><li><code>&lt;link&gt;</code> 标签要写在 <code>&lt;head&gt;</code> 标签中；</li><li><code>&lt;link&gt;</code> 标签属性说明： <ul><li><code>href</code>：指明引入的文档位置；</li><li><code>rel</code>：<code>relation</code> 的简写，说明引入的文档与当前文档的关系；</li></ul></li></ul><p><span class="marker-highlight">优势</span></p><ul><li>可以复用；</li><li>代码结构清晰；</li><li>可触发浏览器的缓存机制，提高访问速度；</li><li>实现了<strong>结构与样式的完全分离</strong>；</li><li>是实际开发中最常使用的方式；</li></ul><h2 id="样式表优先级" tabindex="-1">样式表优先级 <a class="header-anchor" href="#样式表优先级" aria-label="Permalink to &quot;样式表优先级&quot;">​</a></h2><ul><li>优先级规则：行内样式 <code>&gt;</code> 内部样式 <code>=</code> 外部样式</li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">备注</p><p></p><ol><li>内部样式、外部样式，这两者的优先级相同，且：后面的会覆盖前面的（<strong>后来居上</strong>）</li><li>同一个样式表中，优先级也和编写顺序有关，且：后面的会覆盖前面的 （<strong>后来居上</strong>）</li><li>“后来居上”前提是：同一种选择器。对不同种选择器之间，优先级规则详见 <a href="/📒笔记/🖥️专业技能/💈CSS/2-CSS选择器详述.html#选择器的优先级——权重">选择器的优先级——权重</a>。</li></ol></div><h2 id="css-语法规范" tabindex="-1">CSS 语法规范 <a class="header-anchor" href="#css-语法规范" aria-label="Permalink to &quot;CSS 语法规范&quot;">​</a></h2><h3 id="样式写法" tabindex="-1">样式写法 <a class="header-anchor" href="#样式写法" aria-label="Permalink to &quot;样式写法&quot;">​</a></h3><ul><li><em>选择器</em>：找到要添加样式的元素；</li><li><em>声明块</em>：设置具体的样式（声明块是由一个或多个声明组成的），声明的格式为：<strong><code>属性名:属性值;</code></strong>；</li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">备注</p><p></p><ol><li>最后一个声明后面的 <code>;</code> 理论上是可以省略的，推荐写上；</li><li>选择器与声明块之间、属性名与属性值之间，均有一个空格，理论上可以省略，但推荐写上。 <img src="`+k+`" alt="" loading="lazy"></li></ol></div><h3 id="注释的写法" tabindex="-1">注释的写法 <a class="header-anchor" href="#注释的写法" aria-label="Permalink to &quot;注释的写法&quot;">​</a></h3><p></p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.css">example.css</span></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 给h1元素添加样式 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	/* 设置文字颜色 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	/* 设置文字大小 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><h2 id="css-代码风格" tabindex="-1">CSS 代码风格 <a class="header-anchor" href="#css-代码风格" aria-label="Permalink to &quot;CSS 代码风格&quot;">​</a></h2><h3 id="展开风格" tabindex="-1">展开风格 <a class="header-anchor" href="#展开风格" aria-label="Permalink to &quot;展开风格&quot;">​</a></h3><ul><li>开发时推荐，便于维护和调试</li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.css">example.css</span></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><h3 id="紧凑风格" tabindex="-1">紧凑风格 <a class="header-anchor" href="#紧凑风格" aria-label="Permalink to &quot;紧凑风格&quot;">​</a></h3><ul><li>项目上线时推荐，可以减少文件体积</li></ul><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="example.css">example.css</span></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><div class="tip custom-block github-alert"><p class="custom-block-title">备注</p><p>项目上线时，会使用工具 (<code>webpack</code>) 把「展开风格」的代码转换为「紧凑风格」的代码，这样可以减少文件体积，节约网络流量，同时也能让用户打开网页时速度更快。</p></div><h2 id="css-三大特性" tabindex="-1">CSS 三大特性 <a class="header-anchor" href="#css-三大特性" aria-label="Permalink to &quot;CSS 三大特性&quot;">​</a></h2><h3 id="层叠性" tabindex="-1">层叠性 <a class="header-anchor" href="#层叠性" aria-label="Permalink to &quot;层叠性&quot;">​</a></h3><ul><li>概念：如果发生了样式冲突，那就会根据一定的规则（选择器优先级），进行样式的层叠（覆盖）。</li></ul><details class="details custom-block"><summary>什么是样式冲突？</summary><p>元素的 <strong>同一个样式名</strong>，被设置了 <strong>不同的值</strong>，这就是冲突 <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 。</p></details><h3 id="继承性" tabindex="-1">继承性 <a class="header-anchor" href="#继承性" aria-label="Permalink to &quot;继承性&quot;">​</a></h3><ul><li>概念：元素会自动拥有 <strong>其父元素</strong>，或 <strong>其祖先元素</strong> 上所设置的 <strong>某些样式</strong>。</li><li>规则：优先继承 <strong>离得近</strong> 的。</li><li>常见的可继承属性：<code>text-??</code> ， <code>font-??</code> ， <code>line-??</code> ， <code>color</code> ……</li></ul><h3 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-label="Permalink to &quot;优先级&quot;">​</a></h3><ul><li>简单即：<code>!important</code> <code>&gt;</code> 行内样式 <code>&gt;</code> ID 选择器 <code>&gt;</code> 类选择器 <code>&gt;</code> 元素选择器 <code>&gt;</code> * <code>&gt;</code> 继承的样式。</li><li>详细即：需要计算权重。计算权重时需要注意：<strong>并集选择器的每一个部分是分开算的！</strong></li></ul>`,56)),i(n),i(p),s[2]||(s[2]=e('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>demo <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>',2))])}const F=h(g,[["render",u]]);export{S as __pageData,F as default};
