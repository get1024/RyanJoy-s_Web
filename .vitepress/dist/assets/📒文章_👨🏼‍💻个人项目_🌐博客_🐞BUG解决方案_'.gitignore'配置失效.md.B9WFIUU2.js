import{_ as d,B as e,c as r,o as p,j as a,G as s,a3 as t,a as c}from"./chunks/framework.DFbhKqot.js";const F=JSON.parse(`{"title":".gitignore 配置失效","description":"","frontmatter":{"title":".gitignore 配置失效","createAt":"2025-01-27T14:52:25.000Z","updateAt":"2025-02-05T22:36:33.000Z","tags":["博客","解决方案","Bug","Git"]},"headers":[],"relativePath":"📒文章/👨🏼‍💻个人项目/🌐博客/🐞BUG解决方案/'.gitignore'配置失效.md","filePath":"📒文章/👨🏼‍💻个人项目/🌐博客/🐞BUG解决方案/'.gitignore'配置失效.md","lastUpdated":1738769124000}`),h={name:"📒文章/👨🏼‍💻个人项目/🌐博客/🐞BUG解决方案/'.gitignore'配置失效.md"};function g(k,i,b,u,m,v){const n=e("ArticleMetadata"),l=e("NolebaseGitContributors"),o=e("NolebaseGitChangelog");return p(),r("div",{"data-pagefind-body":!0,"data-pagefind-meta":"base64:JTdCJTIydGl0bGUlMjIlM0ElMjIuZ2l0aWdub3JlJTIwJUU5JTg1JThEJUU3JUJEJUFFJUU1JUE0JUIxJUU2JTk1JTg4JTIyJTJDJTIyY3JlYXRlQXQlMjIlM0ElMjIyMDI1LTAxLTI3VDE0JTNBNTIlM0EyNS4wMDBaJTIyJTJDJTIydXBkYXRlQXQlMjIlM0ElMjIyMDI1LTAyLTA1VDIyJTNBMzYlM0EzMy4wMDBaJTIyJTJDJTIydGFncyUyMiUzQSU1QiUyMiVFNSU4RCU5QSVFNSVBRSVBMiUyMiUyQyUyMiVFOCVBNyVBMyVFNSU4NiVCMyVFNiU5NiVCOSVFNiVBMSU4OCUyMiUyQyUyMkJ1ZyUyMiUyQyUyMkdpdCUyMiU1RCUyQyUyMmRhdGUlMjIlM0ExNzM4NzY5MTI0MDAwJTdE"},[i[0]||(i[0]=a("h1",{id:"gitignore-配置失效",tabindex:"-1"},[c(".gitignore 配置失效 "),a("a",{class:"header-anchor",href:"#gitignore-配置失效","aria-label":'Permalink to ".gitignore 配置失效"'},"​")],-1)),s(n),i[1]||(i[1]=t(`<h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>在使用 <code>Git</code> 时，如果 <code>.gitignore</code> 文件配置正确，但某些文件或目录依然被 <code>Git</code> 跟踪并上传到远程仓库，这通常是因为这些文件在添加到 <code>.gitignore</code> 之前已经被 <code>Git</code> 跟踪并提交过。即使后来在 <code>.gitignore</code> 中添加了这些文件的忽略规则，<code>Git</code> 依然会继续跟踪它们。</p><p><strong class="marker-underline"><em>那么如何使 <code>.gitignore</code> 文件的规则对于那些已经被 track 的文件生效呢 ?</em></strong></p><h2 id="解决办法" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法" aria-label="Permalink to &quot;解决办法&quot;">​</a></h2><p>要解决 <code>.gitignore</code> 失效的问题，需要通过以下步骤将已经被 Git 跟踪的文件从版本控制中移除，并确保这些文件在将来不会被再次跟踪。具体操作如下：</p><ol><li><strong>更新 <code>.gitignore</code> 文件</strong>，确保将不需要跟踪的文件或目录添加到其中。</li><li><strong class="marker-evy">从 Git 索引中移除已经跟踪的文件</strong>，但保留文件在本地。</li><li><strong>提交更改</strong>，将 <code>.gitignore</code> 文件的更新和文件移除操作提交到版本库。</li><li><strong>推送更改</strong>，将本地提交推送到远程仓库。</li></ol><h2 id="操作步骤" tabindex="-1">操作步骤 <a class="header-anchor" href="#操作步骤" aria-label="Permalink to &quot;操作步骤&quot;">​</a></h2><h3 id="更新-gitignore-文件" tabindex="-1">更新 <code>.gitignore</code> 文件 <a class="header-anchor" href="#更新-gitignore-文件" aria-label="Permalink to &quot;更新 \`.gitignore\` 文件&quot;">​</a></h3><p>编辑 <code>.gitignore</code> 文件，并确保将需要忽略的文件或目录添加到其中。例如，忽略某个目录或文件：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title=".gitignore">.gitignore</span></div><div class="language-gitignore vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span># 忽略文件夹</span></span>
<span class="line"><span>folder_name/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 忽略特定文件</span></span>
<span class="line"><span>file_name.ext</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h3 id="从-git-索引中移除文件" tabindex="-1">从 Git 索引中移除文件 <a class="header-anchor" href="#从-git-索引中移除文件" aria-label="Permalink to &quot;从 Git 索引中移除文件&quot;">​</a></h3><p>对于已经上传到 Git 仓库的文件，你需要将这些文件从 Git 的索引中移除，但保留它们在本地<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。使用以下命令：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file_name.ext</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>如果是目录，可以使用：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> folder_name/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="提交更改" tabindex="-1">提交更改 <a class="header-anchor" href="#提交更改" aria-label="Permalink to &quot;提交更改&quot;">​</a></h3><p>完成文件移除操作后，提交 <code>.gitignore</code> 的更改和文件从 Git 索引中移除的更改：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .gitignore</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Update .gitignore and remove files from tracking&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h3 id="推送更改" tabindex="-1">推送更改 <a class="header-anchor" href="#推送更改" aria-label="Permalink to &quot;推送更改&quot;">​</a></h3><p>最后，将提交推送到远程仓库：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="git">git</span></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch_name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><p>完成以上步骤后，Git 将不再跟踪 <code>.gitignore</code> 中列出的文件或目录，且这些文件不会再上传到远程仓库。</p>`,22)),s(l),s(o),i[2]||(i[2]=t('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><strong>注意：</strong></p><ul><li>使用 <code>git rm --cached</code> 命令时，只是将文件从版本控制中移除，但文件会保留在你的本地工作目录中。</li><li>如果 <code>.gitignore</code> 配置不正确，或者文件仍然被错误地跟踪，可以通过 <code>git status</code> 查看当前状态并进行调试。</li></ul><a href="#fnref1" class="footnote-backref">↩︎</a></li></ol></section>',2))])}const f=d(h,[["render",g]]);export{F as __pageData,f as default};
