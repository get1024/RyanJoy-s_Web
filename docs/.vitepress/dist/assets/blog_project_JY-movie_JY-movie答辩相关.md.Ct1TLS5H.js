import{_ as o,c,I as e,aq as s,l as t,a as r,o as b,D as l}from"./chunks/framework.B5CrngwD.js";const g=JSON.parse('{"title":"JY-movie答辩相关","description":"","frontmatter":{"Created at":"2024年04月27日 22:13:06","Last edited at":"2024年05月06日 19:13:57","title":"JY-movie答辩相关"},"headers":[],"relativePath":"blog/project/JY-movie/JY-movie答辩相关.md","filePath":"blog/project/JY-movie/JY-movie答辩相关.md","lastUpdated":1714994099000}'),d={name:"blog/project/JY-movie/JY-movie答辩相关.md"},u=s('<h1 id="定稿后答辩" tabindex="-1">定稿后答辩 <a class="header-anchor" href="#定稿后答辩" aria-label="Permalink to &quot;定稿后答辩&quot;">​</a></h1><h2 id="一、材料准备" tabindex="-1">一、材料准备 <a class="header-anchor" href="#一、材料准备" aria-label="Permalink to &quot;一、材料准备&quot;">​</a></h2><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" checked="true" disabled="true"><label for="cbx_0"> 论文纸质版打印✖️2；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> 答辩 PPT，10~15 页；（before 2024/5/6 18:00）；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" checked="true" disabled="true"><label for="cbx_2"> 毕业论文 word 版；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" checked="true" disabled="true"><label for="cbx_3"> 毕业论文 PDF 版；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_4" checked="true" disabled="true"><label for="cbx_4"> 对毕业设计的演示和解说视频；（命名：2025050361-软件工程-任俊业-演示和解说视频--朱长江）</label></li><li class="task-list-item"><input type="checkbox" id="cbx_5" checked="true" disabled="true"><label for="cbx_5"> 指导记录表；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_6" checked="true" disabled="true"><label for="cbx_6"> 源代码；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_7" checked="true" disabled="true"><label for="cbx_7"> 源代码部署说明文档；</label></li><li class="task-list-item"><input type="checkbox" id="cbx_8" checked="true" disabled="true"><label for="cbx_8"> 文献翻译（每个学生一篇，建立文件夹，命名为：“学号-专业-学生姓名-论文名称--指导教师姓名”，文件夹中包含外文文献原文一篇，PDF格式，翻译一篇，Word格式。PDF及Word命名为，学号-专业-学生姓名-文章标题--指导教师姓名“。）</label></li></ul><h2 id="二、问题准备" tabindex="-1">二、问题准备 <a class="header-anchor" href="#二、问题准备" aria-label="Permalink to &quot;二、问题准备&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">你的项目有哪些创新点？</p><p></p><ul><li>以 PC 端的电影售票平台来说，虽然现在 springboot + vue 的前后端分离项目十分繁多，但现在主流的电影购票管理系统并没有采用这一组合。查看淘票票，采用的前端框架是 preact；查看猫眼电影，前端框架使用的是 jQuery。所以我就萌生了利用 springboot 和 vue 两框架结合，来搭建一个系统。</li><li>在结束国内外研究现状分析后，在系统功能层面，提出了结合“后电影产业”、“衍生品商城”等概念来丰富电影购票系统的功能。</li></ul></div><div class="tip custom-block github-alert"><p class="custom-block-title">项目使用的数据库是什么？优点有哪些？</p><p></p><ul><li>使用的 Mysql 数据库；</li><li>MySql数据库应用广泛，它方便了用户进行数据查询。同时它灵活性和功能都比较优，所以在实现某功能时只需要一小段代码，而不像其他程序需要编写大段代码。正因为它实现功能简单易学，只需一些有能力的处理者就可以对其进行管理而不需要专业的人来处理。其优点有如高效、免费、体积很小，开发成本也很低。</li></ul></div><div class="tip custom-block github-alert"><p class="custom-block-title">Springboot 是什么？</p><p></p><ul><li>Spring Boot 是快速开发框架，可以轻松快速地创建独立的应用程序，其中内嵌了 tomcat，简化 maven 配置，自动配置 spring 容器，不需要 xml 配置等。</li></ul></div><div class="tip custom-block github-alert"><p class="custom-block-title">系统数据工作流是怎样的？</p><p></p><ul><li>前端发送请求，根据请求路径转到 controller 控制器中的对应方法，然后调用 service 业务逻辑层，通过impl 实现类，调用 dao 层数据库，数据库再调用 mapper 层来实现数据库的增删改查。最后将查询到的数据库结果反馈到前台界面。</li></ul></div><div class="tip custom-block github-alert"><p class="custom-block-title">系统安全性是如何实现的？</p><p></p><ul><li>在前端，使用前置路由守卫进行全局的权限验证和登录状态检查。如果没有登录，在路由跳转之前，检查用户是否有权访问目标路由，从而跳转到登录界面。</li><li>后端使用 Spring security 的 UserDetailsService 来加载和验证用户信息；使用 JWT 进行用户授权和验证。在一些功能上的访问授权，通过 spring security 的 <code>@PreAuthorize</code> 注解定进行角色判定，符合要求才准许访问。</li></ul></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>',10),p=t("h2",{id:"file-history",tabindex:"-1"},[r("File History "),t("a",{class:"header-anchor",href:"#file-history","aria-label":'Permalink to "File History"'},"​")],-1);function n(h,_,m,k,x,v){const i=l("NolebaseGitContributors"),a=l("NolebaseGitChangelog");return b(),c("div",null,[u,e(i),p,e(a)])}const y=o(d,[["render",n]]);export{g as __pageData,y as default};
